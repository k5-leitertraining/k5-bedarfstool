{"version":3,"sources":["../node_modules/.pnpm/papaparse@5.4.1/node_modules/papaparse/papaparse.js","../src/index.ts","../src/components/TrackRoot.ts","../src/components/getTemplate.ts","../src/components/TrackPoint.ts","../src/data/trackPoints.ts","../src/data/questions.ts","../src/components/QuestionRoot.ts","../src/components/Question.ts","../src/components/Answer.ts","../src/components/QuestionArrow.ts","../src/components/EvaluationRoot.ts","../src/components/EvaluationPoint.ts","../src/data/evaluation.ts","../src/components/DownloadRoot.ts","../src/components/DownloadButton.ts","../src/data/download.ts","../src/components/FinishRoot.ts"],"sourcesContent":["/* @license\nPapa Parse\nv5.4.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n\t// stringify the factory method for the blob worker\n\t// eslint-disable-next-line func-name\n}(this, function moduleFactory()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tfunction getWorkerBlob() {\n\t\tvar URL = global.URL || global.webkitURL || null;\n\t\tvar code = moduleFactory.toString();\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \", '(', code, ')();'], {type: 'text/javascript'})));\n\t}\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = global.IS_PAPA_WORKER || false;\n\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t}\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\t_input = stripBom(_input);\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\n\t\t// Strip character from UTF-8 BOM encoded files that cause issue parsing the file\n\t\tfunction stripBom(string) {\n\t\t\tif (string.charCodeAt(0) === 0xfeff) {\n\t\t\t\treturn string.slice(1);\n\t\t\t}\n\t\t\treturn string;\n\t\t}\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n\n\t\t/** whether to skip empty lines */\n\t\tvar _skipEmptyLines = false;\n\n\t\t/** the columns (keys) we expect when we unparse objects */\n\t\tvar _columns = null;\n\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n\t\tvar _escapeFormulae = false;\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (Array.isArray(_input))\n\t\t{\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(_columns || Object.keys(_input[0]), _input, _skipEmptyLines);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (Array.isArray(_input.data))\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields = _input.meta && _input.meta.fields || _columns;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: typeof _input.data[0] === 'object'\n\t\t\t\t\t\t\t? Object.keys(_input.data[0])\n\t\t\t\t\t\t\t: [];\n\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow new Error('Unable to serialize unrecognized input');\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| typeof _config.quotes === 'function'\n\t\t\t\t|| Array.isArray(_config.quotes))\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\n\t\t\tif (Array.isArray(_config.columns)) {\n\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n\n\t\t\t\t_columns = _config.columns;\n\t\t\t}\n\n\t\t\tif (_config.escapeChar !== undefined) {\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n\t\t\t}\n\n\t\t\tif (typeof _config.escapeFormulae === 'boolean' || _config.escapeFormulae instanceof RegExp) {\n\t\t\t\t_escapeFormulae = _config.escapeFormulae instanceof RegExp ? _config.escapeFormulae : /^[=+\\-@\\t\\r].*$/;\n\t\t\t}\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data, skipEmptyLines)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tvar emptyLine = false;\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n\t\t\t\tif (skipEmptyLines && !hasHeader)\n\t\t\t\t{\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n\t\t\t\t}\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n\t\t\t\t\tvar line = [];\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n\t\t\t\t\t\tline.push(data[row][cx]);\n\t\t\t\t\t}\n\t\t\t\t\temptyLine = line.join('').trim() === '';\n\t\t\t\t}\n\t\t\t\tif (!emptyLine)\n\t\t\t\t{\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0 && !nullLine)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n\t\t\t\t\t{\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tvar needsQuotes = false;\n\n\t\t\tif (_escapeFormulae && typeof str === \"string\" && _escapeFormulae.test(str)) {\n\t\t\t\tstr = \"'\" + str;\n\t\t\t\tneedsQuotes = true;\n\t\t\t}\n\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n\n\t\t\tneedsQuotes = needsQuotes\n\t\t\t\t\t\t\t|| _quotes === true\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._halted = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\t\t\tthis._halted = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\tthis._halted = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\t\tthis._halted = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send(this._config.downloadRequestBody);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk;\n\t\t\tif(size) {\n\t\t\t\tchunk = remaining.substring(0, size);\n\t\t\t\tremaining = remaining.substring(size);\n\t\t\t} else {\n\t\t\t\tchunk = remaining;\n\t\t\t\tremaining = '';\n\t\t\t}\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t// so we need to pause until more items\n\t\t\t\t// can be processed\n\t\t\t\tthis._handle.pause();\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t}\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/;\n\t\tvar ISO_DATE = /^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/;\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse {\n\t\t\t\t\t\t_results.data = _results.data[0];\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n\t\t\t// otherwise we can get duplicate content within a row\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tif(self.streamer._halted) {\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t} else {\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n\t\t\t\t// wait for it to halt in order to resume\n\t\t\t\tsetTimeout(self.resume, 3);\n\t\t\t}\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction testFloat(s) {\n\t\t\tif (FLOAT.test(s)) {\n\t\t\t\tvar floatValue = parseFloat(s);\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\t_results.data = _results.data.filter(function(d) {\n\t\t\t\t\treturn !testEmptyLine(d);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\n\t\t\tfunction addHeader(header, i)\n\t\t\t{\n\t\t\t\tif (isFunction(_config.transformHeader))\n\t\t\t\t\theader = _config.transformHeader(header, i);\n\n\t\t\t\t_fields.push(header);\n\t\t\t}\n\n\t\t\tif (Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\t_results.data[i].forEach(addHeader);\n\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n\t\t\telse\n\t\t\t\t_results.data.forEach(addHeader);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (testFloat(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfunction processRow(rowSource, i)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = rowSource[j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\n\t\t\tvar incrementBy = 1;\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\t_results.data = _results.data.map(processRow);\n\t\t\t\tincrementBy = _results.data.length;\n\t\t\t}\n\t\t\telse\n\t\t\t\t_results.data = processRow(_results.data, 0);\n\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += incrementBy;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n\t\t\t\tvar delim = delimitersToGuess[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 0) {\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\tvar error = {\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg\n\t\t\t};\n\t\t\tif(row !== undefined) {\n\t\t\t\terror.row = row;\n\t\t\t}\n\t\t\t_results.errors.push(error);\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\tif (config.quoteChar === undefined || config.quoteChar === null) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow new Error('Comment character same as delimiter');\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow new Error('Input must be a string');\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\t// Rename headers if there are duplicates\n\t\t\tif (config.header && !baseIndex)\n\t\t\t{\n\t\t\t\tvar firstLine = input.split(newline)[0];\n\t\t\t\tvar headers = firstLine.split(delim);\n\t\t\t\tvar separator = '_';\n\t\t\t\tvar headerMap = [];\n\t\t\t\tvar headerCount = {};\n\t\t\t\tvar duplicateHeaders = false;\n\n\t\t\t\tfor (var j in headers) {\n\t\t\t\t\tvar header = headers[j];\n\t\t\t\t\tif (isFunction(config.transformHeader))\n\t\t\t\t\t\theader = config.transformHeader(header, j);\n\t\t\t\t\tvar headerName = header;\n\n\t\t\t\t\tvar count = headerCount[header] || 0;\n\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\tduplicateHeaders = true;\n\t\t\t\t\t\theaderName = header + separator + count;\n\t\t\t\t\t}\n\t\t\t\t\theaderCount[header] = count + 1;\n\t\t\t\t\t// In case it already exists, we add more separtors\n\t\t\t\t\twhile (headerMap.includes(headerName)) {\n\t\t\t\t\t\theaderName = headerName + separator + count;\n\t\t\t\t\t}\n\t\t\t\t\theaderMap.push(headerName);\n\t\t\t\t}\n\t\t\t\tif (duplicateHeaders) {\n\t\t\t\t\tvar editedInput = input.split(newline);\n\t\t\t\t\teditedInput[0] = headerMap.join(delim);\n\t\t\t\t\tinput = editedInput.join(newline);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndDelimiter, delimLen) === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t// we look for next delimiter char\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substring(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\n\t\tvar workerUrl = getWorkerBlob();\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: msg.results.data[i],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow new Error('Not implemented.');\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","import { createApp } from 'vue'\nimport TrackRoot from './components/TrackRoot'\nimport QuestionRoot from './components/QuestionRoot'\nimport EvaluationRoot from './components/EvaluationRoot'\nimport DownloadRoot from './components/DownloadRoot'\nimport FinishRoot from './components/FinishRoot'\nimport { getTemplate } from './components/getTemplate'\nimport { useEvaluation } from './data/evaluation'\n\ncreateApp({\n  template: getTemplate({\n    templateRoot: '#bdtl-app',\n    shouldSkipRoot: true,\n    templateReplaces: {\n      'track-root': /* html */ `\n        <track-root />\n      `,\n      'question-root': /* html */ `\n        <question-root />\n      `,\n      'evaluation-root': /* html */ `\n        <evaluation-root />\n      `,\n      'download-root': /* html */ `\n        <download-root v-show=\"isFinished\" />\n      `,\n      'finish-root': /* html */ `\n        <finish-root v-show=\"isFinished\" />\n      `,\n    },\n  }),\n  components: {\n    TrackRoot,\n    QuestionRoot,\n    EvaluationRoot,\n    DownloadRoot,\n    FinishRoot,\n  },\n  setup() {\n    const { isFinished } = useEvaluation()\n\n    return {\n      isFinished,\n    }\n  },\n}).mount('#bdtl-app')\n","import { defineComponent } from 'vue'\nimport { getTemplate } from './getTemplate'\nimport TrackPoint from './TrackPoint'\nimport { useTrackPoints } from '../data/trackPoints'\nimport { useQuestions } from '../data/questions'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'track-root',\n    templateInjects: {\n      '&': /* html */ `\n        <template v-for=\"(trackPoint, index) in trackPoints\">\n          <track-point \n            :track-point=\"trackPoint\" \n            :with-track=\"isFirstTrackPoint(index) ? undefined : isTrackDone(index) ? 'done' : 'open'\"\n            @click=\"setCurrentQuestionIndex(index)\"\n          />\n        </template>\n      `,\n    },\n  }),\n  setup() {\n    const { trackPoints } = useTrackPoints()\n    const { setCurrentQuestionIndex } = useQuestions()\n    const isTrackDone = (index: number) =>\n      trackPoints.value\n        .slice(0, index + 1)\n        .every(\n          (trackPoint) =>\n            trackPoint.status === 'done' || trackPoint.status === 'current'\n        )\n\n    const isFirstTrackPoint = (index: number) => index === 0\n\n    return {\n      isTrackDone,\n      isFirstTrackPoint,\n      trackPoints,\n      setCurrentQuestionIndex,\n    }\n  },\n  components: {\n    TrackPoint,\n  },\n})\n","export const getTemplate = ({\n  templateRoot,\n  dataInjects,\n  templateInjects,\n  templateReplaces,\n  withVModel,\n  withAttrs,\n  shouldSkipRoot,\n}: {\n  templateRoot: string\n  dataInjects?: Record<string, string>\n  templateInjects?: Record<string, string>\n  templateReplaces?: Record<string, string>\n  withVModel?: Record<string, string>\n  withAttrs?: Record<string, Record<string, string>>\n  shouldSkipRoot?: boolean\n}) => {\n  const templateRootQueryString =\n    templateRoot.startsWith('.') || templateRoot.startsWith('#')\n      ? templateRoot\n      : `[data-bdtl=\"${templateRoot}\"]`\n  const templateRootElement = document.querySelector(templateRootQueryString)\n\n  if (!templateRootElement) {\n    return ''\n  }\n\n  const templateElement = templateRootElement.cloneNode(true) as HTMLElement\n  if (dataInjects) {\n    Object.entries(dataInjects).forEach(([key, value]) => {\n      const elements = templateElement.querySelectorAll(`[data-bdtl=\"${key}\"]`)\n      elements.forEach((element) => {\n        element.textContent = `{{${value}}}`\n      })\n    })\n  }\n  if (templateInjects) {\n    Object.entries(templateInjects).forEach(([key, value]) => {\n      if (key === '&') {\n        templateElement.innerHTML = value\n        return\n      }\n      if (key.startsWith('.') || key.startsWith('#')) {\n        const element = templateElement.querySelectorAll(key)\n        element.forEach((element) => {\n          element.innerHTML = value\n        })\n        return\n      }\n      const elements = templateElement.querySelectorAll(`[data-bdtl=\"${key}\"]`)\n      elements.forEach((element) => {\n        element.innerHTML = value\n      })\n    })\n  }\n  if (templateReplaces) {\n    Object.entries(templateReplaces).forEach(([key, value]) => {\n      if (key === '&') {\n        templateElement.outerHTML = value\n        return\n      }\n      if (key.startsWith('.') || key.startsWith('#')) {\n        const element = templateElement.querySelectorAll(key)\n        element.forEach((element) => {\n          element.outerHTML = value\n        })\n        return\n      }\n      const elements = templateElement.querySelectorAll(`[data-bdtl=\"${key}\"]`)\n      elements.forEach((element) => {\n        element.outerHTML = value\n      })\n    })\n  }\n  if (withVModel) {\n    Object.entries(withVModel).forEach(([key, value]) => {\n      const element = templateElement.querySelector(`[data-bdtl=\"${key}\"]`)\n      if (element) {\n        element.setAttribute('v-model', value)\n      }\n    })\n  }\n  if (withAttrs) {\n    Object.entries(withAttrs).forEach(([key, value]) => {\n      const element = templateElement.querySelector(`[data-bdtl=\"${key}\"]`)\n      if (element) {\n        Object.entries(value).forEach(([attr, attrValue]) => {\n          element.setAttribute(attr, attrValue)\n        })\n      }\n    })\n  }\n\n  return shouldSkipRoot ? templateElement.innerHTML : templateElement.outerHTML\n}\n","import { PropType, defineComponent } from 'vue'\nimport { TrackPointType } from '../data/trackPoints'\nimport { getTemplate } from './getTemplate'\n\nconst createTrackPointVariant = (variant: string) =>\n  defineComponent({\n    template: getTemplate({\n      templateRoot: `track-point--${variant}`,\n      dataInjects: {\n        'track-point__number': 'number',\n        'track-point__name': 'name',\n      },\n    }),\n    props: {\n      number: {\n        type: String,\n        required: true,\n      },\n      name: {\n        type: String,\n        required: true,\n      },\n    },\n  })\n\nconst TrackPointOpen = createTrackPointVariant('open')\nconst TrackPointCurrent = createTrackPointVariant('current')\nconst TrackPointDone = createTrackPointVariant('done')\n\nconst createTrackTrackVariant = (variant: string) =>\n  defineComponent({\n    template: getTemplate({\n      templateRoot: `track-track--${variant}`,\n    }),\n  })\n\nconst TrackTrackOpen = createTrackTrackVariant('open')\nconst TrackTrackDone = createTrackTrackVariant('done')\n\nexport default defineComponent({\n  template: /* html */ `\n    <template v-if=\"withTrack\">\n      <track-track-open v-if=\"withTrack === 'open'\" />\n      <track-track-done v-if=\"withTrack === 'done'\" />\n    </template>\n    <track-point-open \n      v-if=\"trackPoint.status === 'open'\"\n      :number=\"trackPoint.number\"\n      :name=\"trackPoint.name\" @click.native=\"$emit('click')\"\n    />\n    <track-point-current \n      v-if=\"trackPoint.status === 'current'\"\n      :number=\"trackPoint.number\"\n      :name=\"trackPoint.name\"\n      @click.native=\"$emit('click')\"\n    />\n    <track-point-done\n      v-if=\"trackPoint.status === 'done'\"\n      :number=\"trackPoint.number\"\n      :name=\"trackPoint.name\"\n      @click.native=\"$emit('click')\"\n    />\n  `,\n  emits: ['click'],\n  props: {\n    trackPoint: {\n      type: Object as PropType<TrackPointType>,\n      required: true,\n    },\n    withTrack: {\n      type: String as PropType<'done' | 'open'>,\n      required: false,\n    },\n  },\n  components: {\n    TrackPointOpen,\n    TrackPointCurrent,\n    TrackPointDone,\n    TrackTrackOpen,\n    TrackTrackDone,\n  },\n  setup(props) {\n    return {}\n  },\n})\n","import { computed } from 'vue'\nimport { useQuestions } from './questions'\n\nexport type TrackPointType = {\n  number: string\n  name: string\n  status: 'open' | 'current' | 'done'\n}\n\nexport const useTrackPoints = () => {\n  const { allQuestions, currentQuestionIndex } = useQuestions()\n\n  const isQuestionDone = (questionIndex: number) => {\n    const questionAnswers = allQuestions.value[questionIndex]?.answers\n    if (!questionAnswers) {\n      return false\n    }\n    return Object.values(questionAnswers).some(({ value }) => value)\n  }\n\n  const trackPoints = computed(() => {\n    return allQuestions.value.map((question, questionIndex) => {\n      return {\n        number: String(questionIndex + 1),\n        name: question.title,\n        status:\n          currentQuestionIndex.value === questionIndex\n            ? ('current' as const)\n            : isQuestionDone(questionIndex)\n            ? ('done' as const)\n            : ('open' as const),\n      }\n    })\n  })\n\n  return {\n    trackPoints,\n  }\n}\n","import { computed, ref } from 'vue'\n\nexport type QuestionType = {\n  title: string\n  question: string\n  weight: number\n  answers: AnswerType[]\n}\n\nexport type AnswerType = {\n  label: string\n  value: boolean | null\n  weight: number\n}\n\nconst getWeightedText = (textRaw: string, defaultWeight: number = 0) => {\n  const [, weightRaw, text] = textRaw.match(/\\[([-+]?\\d+)\\](.*)/m) || []\n  const weight = parseInt(weightRaw || '') || defaultWeight\n  return { weight, text: text || textRaw }\n}\n\nconst getQuestionsData = (): QuestionType[] => {\n  const questionElements = document.querySelectorAll('[data-bdtl=\"question\"]')\n  const questionsData = [...questionElements].map((element) => {\n    const titleRaw =\n      element\n        .querySelector('[data-bdtl=\"question__title\"]')\n        ?.textContent?.trim() || ''\n    const { weight, text: title } = getWeightedText(titleRaw, 1)\n    const question =\n      element\n        .querySelector('[data-bdtl=\"question__question\"]')\n        ?.textContent?.trim() || ''\n\n    const answerElements = element.querySelectorAll('[data-bdtl=\"answer\"]')\n    const answers = [...answerElements].map((element) => {\n      const labelRaw =\n        element\n          .querySelector('[data-bdtl=\"answer__label\"]')\n          ?.textContent?.trim() || ''\n      const { weight, text: label } = getWeightedText(labelRaw)\n      return {\n        label: label || labelRaw,\n        value: null,\n        weight,\n      }\n    })\n    return {\n      title,\n      question,\n      weight,\n      answers,\n    }\n  })\n  return questionsData\n}\n\nexport const allQuestions = getQuestionsData()\n\nconst currentQuestionIndex = ref(0)\n\nconst currentAnswers = ref<Record<number, Record<number, boolean>>>({})\n\nconst isNegativeAnswer = (answer: AnswerType) => {\n  return answer.weight < 0\n}\n\nconst deactivateOppositeAnswers = ({\n  questionIndex,\n  answerIndex,\n}: {\n  questionIndex: number\n  answerIndex: number\n}) => {\n  const answers = allQuestions[questionIndex]?.answers\n  const checkedAnswer = answers?.[answerIndex]\n  if (!checkedAnswer) return\n  answers.forEach((answer, index) => {\n    if (isNegativeAnswer(answer) === isNegativeAnswer(checkedAnswer)) {\n      return\n    }\n    currentAnswers.value[questionIndex] = {\n      ...currentAnswers.value[questionIndex],\n      [index]: false,\n    }\n  })\n}\n\nexport const useQuestions = () => {\n  const allQuestionsComputed = computed(() =>\n    allQuestions.map((question, questionIndex) => {\n      return {\n        ...question,\n        answers: question.answers.map((answer, answerIndex) => {\n          return {\n            ...answer,\n            value: currentAnswers.value[questionIndex]?.[answerIndex] ?? null,\n          }\n        }),\n      }\n    })\n  )\n  const currentQuestionIndexComputed = computed(\n    () => currentQuestionIndex.value\n  )\n\n  const currentQuestion = computed(() => {\n    return allQuestionsComputed.value[currentQuestionIndex.value]\n  })\n\n  const incrementCurrentQuestionIndex = () => {\n    currentQuestionIndex.value =\n      (currentQuestionIndex.value + 1) % allQuestionsComputed.value.length\n  }\n\n  const decrementCurrentQuestionIndex = () => {\n    const newIndex = currentQuestionIndex.value - 1\n    if (newIndex < 0) {\n      currentQuestionIndex.value = allQuestionsComputed.value.length - 1\n      return\n    }\n    currentQuestionIndex.value = newIndex % allQuestionsComputed.value.length\n  }\n\n  const setCurrentQuestionIndex = (index: number) => {\n    currentQuestionIndex.value =\n      Math.abs(index) % allQuestionsComputed.value.length\n  }\n\n  const setCurrentQuestionAnswer = (index: number, value: boolean) => {\n    deactivateOppositeAnswers({\n      questionIndex: currentQuestionIndex.value,\n      answerIndex: index,\n    })\n    currentAnswers.value[currentQuestionIndex.value] = {\n      ...currentAnswers.value[currentQuestionIndex.value],\n      [index]: value,\n    }\n  }\n\n  const isFirstQuestion = computed(() => currentQuestionIndex.value === 0)\n  const isLastQuestion = computed(\n    () => currentQuestionIndex.value === allQuestionsComputed.value.length - 1\n  )\n\n  return {\n    allQuestions: allQuestionsComputed,\n    currentQuestionIndex: currentQuestionIndexComputed,\n    currentQuestion,\n    incrementCurrentQuestionIndex,\n    decrementCurrentQuestionIndex,\n    setCurrentQuestionIndex,\n    setCurrentQuestionAnswer,\n    isFirstQuestion,\n    isLastQuestion,\n  }\n}\n","import { computed, defineComponent } from 'vue'\nimport { getTemplate } from './getTemplate'\nimport Question from './Question'\nimport QuestionArrow from './QuestionArrow'\nimport { useQuestions } from '../data/questions'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'question-root',\n    templateInjects: {\n      'question-container': /* html */ `\n        <Transition \n          mode=\"out-in\"\n          class=\"duration-300\"\n          enter-from-class=\"opacity-0\"\n          enter-to-class=\"opacity-100\"\n          leave-from-class=\"opacity-100\"\n          leave-to-class=\"opacity-0\"\n        >\n          <question :question=\"currentQuestion\" :key=\"currentQuestionKey\" @update:answer=\"setCurrentQuestionAnswer($event.index, $event.value)\"/>\n        </Transition>\n      `,\n    },\n    templateReplaces: {\n      'question-arrow--left': /* html */ `\n        <question-arrow direction=\"left\" @click=\"onArrowLeft\" :disabled=\"isFirstQuestion\" />\n      `,\n      'question-arrow--right': /* html */ `\n        <question-arrow direction=\"right\" @click=\"onArrowRight\" :disabled=\"isLastQuestion\" />\n      `,\n    },\n  }),\n  props: {},\n  setup() {\n    const {\n      currentQuestion,\n      incrementCurrentQuestionIndex,\n      decrementCurrentQuestionIndex,\n      setCurrentQuestionAnswer,\n      isFirstQuestion,\n      isLastQuestion,\n    } = useQuestions()\n\n    const onArrowLeft = async () => {\n      decrementCurrentQuestionIndex()\n    }\n\n    const onArrowRight = async () => {\n      incrementCurrentQuestionIndex()\n    }\n\n    const currentQuestionKey = computed(() => {\n      return currentQuestion.value?.title || ''\n    })\n\n    return {\n      currentQuestion,\n      currentQuestionKey,\n      onArrowLeft,\n      onArrowRight,\n      setCurrentQuestionAnswer,\n      isFirstQuestion,\n      isLastQuestion,\n    }\n  },\n  components: {\n    Question,\n    QuestionArrow,\n  },\n})\n\nvar style = document.createElement('style')\nstyle.textContent = `\n.duration-300 {\n  transition-duration: 300ms;\n}\n\n.opacity-0 {\n  opacity: 0;\n}\n\n.opacity-100 {\n  opacity: 1;\n}\n`\ndocument.head.appendChild(style)\n","import { PropType, computed, defineComponent, toRefs } from 'vue'\nimport { getTemplate } from './getTemplate'\nimport { QuestionType } from '../data/questions'\nimport Answer from './Answer'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'question',\n    dataInjects: {\n      question__title: 'title',\n      question__question: 'question',\n    },\n    templateInjects: {\n      'answer-root': /* html */ `\n        <answer\n          v-for=\"(answer, index) in answers\"\n          :key=\"index\"\n          :label=\"answer.label\"\n          :model-value=\"answer.value\"\n          @update:model-value=\"$emit('update:answer', { index, value: $event })\"\n        />\n      `,\n    },\n  }),\n  props: {\n    question: {\n      type: Object as PropType<QuestionType>,\n      required: true,\n    },\n  },\n  components: {\n    Answer,\n  },\n  emits: ['update:answer'],\n  setup(props) {\n    const { question } = toRefs(props)\n    return {\n      title: computed(() => question.value.title),\n      question: computed(() => question.value.question),\n      answers: computed(() => question.value.answers),\n    }\n  },\n})\n","import { defineComponent, computed, PropType } from 'vue'\nimport { getTemplate } from './getTemplate'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'answer',\n    dataInjects: {\n      answer__label: 'label',\n    },\n    withVModel: {\n      answer__checkbox: 'value',\n    },\n    withAttrs: {\n      answer__checkbox: {\n        ':id': 'id',\n      },\n      answer__label: {\n        ':for': 'id',\n      },\n    },\n  }),\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n    modelValue: {\n      type: [Boolean] as PropType<boolean | null>,\n    },\n  },\n  emits: ['update:model-value'],\n  setup(props, { emit }) {\n    const value = computed({\n      get() {\n        return props.modelValue\n      },\n      set(value) {\n        emit('update:model-value', value)\n      },\n    })\n    return {\n      value,\n      id: `answer-${Math.random().toString(36).substr(2, 9)}`,\n    }\n  },\n})\n","import { PropType, computed, defineComponent, toRefs } from 'vue'\nimport { getTemplate } from './getTemplate'\n\nconst QuestionArrowLeft = defineComponent({\n  template: getTemplate({\n    templateRoot: 'question-arrow--left',\n  }),\n})\n\nconst QuestionArrowRight = defineComponent({\n  template: getTemplate({\n    templateRoot: 'question-arrow--right',\n  }),\n})\n\nexport default defineComponent({\n  template: /* html */ `\n    <question-arrow-left v-if=\"direction === 'left'\" @click.native=\"handleClick\" :style=\"style\" />\n    <question-arrow-right v-if=\"direction === 'right'\" @click.native=\"handleClick\" :style=\"style\" />\n  `,\n  emits: ['click'],\n  props: {\n    direction: {\n      type: String as PropType<'left' | 'right'>,\n      required: true,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  components: {\n    QuestionArrowLeft,\n    QuestionArrowRight,\n  },\n  setup(props, { emit }) {\n    const { disabled } = toRefs(props)\n\n    const style = computed(() =>\n      disabled.value\n        ? {\n            cursor: 'not-allowed',\n            opacity: 0.5,\n          }\n        : {}\n    )\n\n    const handleClick = () => {\n      if (disabled.value) return\n      emit('click')\n    }\n\n    return {\n      style,\n      handleClick,\n    }\n  },\n})\n","import { computed, defineComponent } from 'vue'\nimport { getTemplate } from './getTemplate'\nimport EvaluationPoint from './EvaluationPoint'\nimport { useEvaluation } from '../data/evaluation'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'evaluation-root',\n    templateReplaces: {\n      'evaluation-point': /* html */ `\n        <evaluation-point :style=\"style\" />\n      `,\n    },\n  }),\n  components: {\n    EvaluationPoint,\n  },\n  setup() {\n    const { score } = useEvaluation()\n    const style = computed(() => ({\n      left: `${score.value}%`,\n    }))\n    return {\n      style,\n    }\n  },\n})\n","import { defineComponent } from 'vue'\nimport { getTemplate } from './getTemplate'\nimport { useEvaluation } from '../data/evaluation'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'evaluation-point',\n    dataInjects: {\n      'evaluation-text': 'evaluationText',\n    },\n  }),\n  components: {},\n  setup() {\n    const { evaluationText } = useEvaluation()\n    return {\n      evaluationText,\n    }\n  },\n})\n","import { computed, watch } from 'vue'\nimport { AnswerType, useQuestions } from './questions'\n\nconst getEvaluationData = () => {\n  const evaluationTextRaw =\n    document.querySelector('[data-bdtl=\"evaluation-text\"]')?.textContent || ''\n\n  const evaluationTexts = evaluationTextRaw\n    .split('|')\n    .map((text) => text.trim())\n\n  return evaluationTexts\n}\n\nconst evaluationTexts = getEvaluationData()\n\nconst MULTI_SELECT_FACTOR = 0.75\n\nconst calculateScoreOfSelectedAnswers = (answers: AnswerType[]) => {\n  const checkedAnswers = answers.filter((answer) => answer.value)\n  const factor = checkedAnswers.length > 1 ? MULTI_SELECT_FACTOR : 1\n  const scoreRaw = checkedAnswers.reduce((score, answer) => {\n    return score + answer.weight\n  }, 0)\n  return scoreRaw * factor\n}\n\nconst calculateScoreOfMaxAnswers = (answers: AnswerType[]) => {\n  const positiveAnswers = answers.filter((answer) => answer.weight > 0)\n  const factor = positiveAnswers.length > 1 ? MULTI_SELECT_FACTOR : 1\n  const scoreRaw = positiveAnswers.reduce((score, answer) => {\n    return score + answer.weight\n  }, 0)\n  return scoreRaw * factor\n}\n\nconst calculateScoreOfMinAnswers = (answers: AnswerType[]) => {\n  const negativeAnswers = answers.filter((answer) => answer.weight < 0)\n  const factor = negativeAnswers.length > 1 ? MULTI_SELECT_FACTOR : 1\n  const scoreRaw = negativeAnswers.reduce((score, answer) => {\n    return score + answer.weight\n  }, 0)\n  return scoreRaw * factor\n}\n\nexport const useEvaluation = () => {\n  const { allQuestions } = useQuestions()\n\n  const score = computed(() => {\n    // current score\n    const currentScore = allQuestions.value.reduce((score, question) => {\n      const questionScore = calculateScoreOfSelectedAnswers(question.answers)\n      return score + questionScore * question.weight\n    }, 0)\n\n    // max score\n    const maxScore = allQuestions.value.reduce((score, question) => {\n      const questionScore = calculateScoreOfMaxAnswers(question.answers)\n      return score + questionScore * question.weight\n    }, 0)\n\n    // min score\n    const minScore = allQuestions.value.reduce((score, question) => {\n      const questionScore = calculateScoreOfMinAnswers(question.answers)\n      return score + questionScore * question.weight\n    }, 0)\n\n    // in percent\n    return currentScore >= 0\n      ? 50 + (currentScore / maxScore) * 50\n      : 50 - (currentScore / minScore) * 50\n  })\n\n  const evaluationText = computed(() => {\n    const evaluationTextIndex = Math.floor(\n      score.value * 0.01 * (evaluationTexts.length - 0.000001)\n    )\n    return evaluationTexts[evaluationTextIndex]\n  })\n\n  const isFinished = computed(() => {\n    return allQuestions.value.every((question) =>\n      question.answers.some((answer) => answer.value)\n    )\n  })\n\n  return {\n    score,\n    evaluationText,\n    isFinished,\n  }\n}\n","import { computed, defineComponent } from 'vue'\nimport { getTemplate } from './getTemplate'\nimport DownloadButton from './DownloadButton'\nimport { useEvaluation } from '../data/evaluation'\nimport { useDownload } from '../data/download'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'download-root',\n    templateReplaces: {\n      'download-button': /* html */ `\n        <download-button @click.native=\"downloadResults\" />\n      `,\n    },\n  }),\n  components: {\n    DownloadButton,\n  },\n  setup() {\n    const { downloadResults } = useDownload()\n    return {\n      downloadResults,\n    }\n  },\n})\n","import { defineComponent } from 'vue'\nimport { getTemplate } from './getTemplate'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'download-button',\n  }),\n})\n","import { unparse } from 'papaparse'\nimport { useQuestions } from './questions'\nimport { useEvaluation } from './evaluation'\n\nexport const useDownload = () => {\n  const { allQuestions } = useQuestions()\n  const { score } = useEvaluation()\n\n  const getDownloadData = () => {\n    const answersHeader = ['Themenbereich', 'Frage', 'Deine Antwort']\n    const answerRows = allQuestions.value\n      .map((question) => {\n        return question.answers\n          .filter(({ value }) => value)\n          .map((answer) => [\n            question.title.trim(),\n            question.question.trim(),\n            answer.label.trim(),\n          ])\n      })\n      .flat()\n\n    const scoreRow = ['Dein Ergebnis', '', score.value.toFixed(2)]\n\n    const emptyRow = ['', '', '']\n\n    return [answersHeader, ...answerRows, emptyRow, scoreRow]\n  }\n\n  const download = (data: string, filename: string, type: string) => {\n    const file = new Blob([data], { type })\n    const a = document.createElement('a')\n    const url = URL.createObjectURL(file)\n    a.href = url\n    a.download = filename\n    a.click()\n    URL.revokeObjectURL(url)\n  }\n\n  const downloadResults = () => {\n    const data = getDownloadData()\n    const csv = unparse(data)\n    download(csv, 'K5-Bedarfstool-Ergebnisse.csv', 'text/csv')\n  }\n\n  return { downloadResults }\n}\n","import { defineComponent } from 'vue'\nimport { getTemplate } from './getTemplate'\n\nexport default defineComponent({\n  template: getTemplate({\n    templateRoot: 'finish-root',\n  }),\n})\n"],"mappings":"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","names":["require_papaparse","__commonJSMin","exports","module","root","factory","moduleFactory","global","getWorkerBlob","URL","code","Papa","IS_WORKER","IS_PAPA_WORKER","workers","workerIdCounter","CsvToJson","JsonToCsv","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","DuplexStreamStreamer","$","options","config","queue","idx","supported","i","parseNextFile","isFunction","f","returned","error","fileComplete","userCompleteFunc","results","name","file","elem","reason","workerThreadReceivedMessage","_input","_config","dynamicTyping","w","newWorker","streamer","stripBom","string","_quotes","_writeHeader","_delimiter","_newline","_quoteChar","_escapedQuote","_skipEmptyLines","_columns","_escapeFormulae","unpackConfig","quoteCharRegex","escapeRegExp","serialize","value","fields","data","skipEmptyLines","csv","hasHeader","dataKeyedByField","safe","row","maxCol","emptyLine","nullLine","line","c","cx","col","colIdx","str","needsQuotes","escapedQuoteStr","hasAny","substrings","ChunkStreamer","replaceConfig","chunk","isFakeChunk","modifiedChunk","aggregate","lastIndex","finishedIncludingPreview","configCopy","copy","xhr","url","bindFunction","headers","headerName","end","err","getFileSize","errorMessage","errorText","contentRange","reader","slice","usingAsyncReader","input","txt","event","remaining","s","size","parseOnData","streamHasEnded","stream","Duplex","parseOnWrite","writeStreamHasFinished","parseCallbackQueue","callback","encoding","MAX_FLOAT","MIN_FLOAT","FLOAT","ISO_DATE","self","_stepCounter","_rowCounter","_parser","_paused","_aborted","_delimiterError","_fields","_results","userStep","needsHeaderRow","processResults","baseIndex","ignoreLastRow","quoteChar","guessLineEndings","delimGuess","guessDelimiter","parserConfig","testEmptyLine","testFloat","floatValue","addError","fillHeaderFields","applyHeaderAndDynamicTypingAndTransformation","addHeader","header","shouldApplyDynamicTyping","field","parseDynamic","processRow","rowSource","j","incrementBy","newline","comments","delimitersToGuess","bestDelim","bestDelta","fieldCountPrevRow","maxFieldCount","delim","delta","avgFieldCount","emptyLinesCount","preview","fieldCount","re","r","n","nAppearsFirst","numWithN","type","msg","step","fastMode","escapeChar","cursor","aborted","inputLen","delimLen","newlineLen","commentsLen","stepIsFunction","errors","lastCursor","returnable","firstLine","separator","headerMap","headerCount","duplicateHeaders","count","editedInput","rows","pushRow","doStep","nextDelim","nextNewline","quoteSearch","finish","checkUpTo","spacesBetweenQuoteAndDelimiter","extraSpaces","spacesBetweenQuoteAndNewLine","saveRow","index","spaceLength","textBetweenClosingQuoteAndIndex","newCursor","stopped","workerUrl","mainThreadReceivedMessage","e","worker","abort","completeWorker","handle","notImplemented","workerId","obj","cpy","key","func","createApp","defineComponent","getTemplate","templateRoot","dataInjects","templateInjects","templateReplaces","withVModel","withAttrs","shouldSkipRoot","templateRootQueryString","templateRootElement","templateElement","key","value","element","attr","attrValue","defineComponent","createTrackPointVariant","variant","defineComponent","getTemplate","TrackPointOpen","TrackPointCurrent","TrackPointDone","createTrackTrackVariant","TrackTrackOpen","TrackTrackDone","TrackPoint_default","props","computed","computed","ref","getWeightedText","textRaw","defaultWeight","weightRaw","text","getQuestionsData","element","titleRaw","weight","title","question","answers","labelRaw","label","allQuestions","currentQuestionIndex","currentAnswers","isNegativeAnswer","answer","deactivateOppositeAnswers","questionIndex","answerIndex","checkedAnswer","index","useQuestions","allQuestionsComputed","currentQuestionIndexComputed","currentQuestion","incrementCurrentQuestionIndex","decrementCurrentQuestionIndex","newIndex","setCurrentQuestionIndex","setCurrentQuestionAnswer","value","isFirstQuestion","isLastQuestion","useTrackPoints","allQuestions","currentQuestionIndex","useQuestions","isQuestionDone","questionIndex","questionAnswers","value","computed","question","TrackRoot_default","defineComponent","getTemplate","trackPoints","useTrackPoints","setCurrentQuestionIndex","useQuestions","index","trackPoint","TrackPoint_default","computed","defineComponent","computed","defineComponent","toRefs","defineComponent","computed","Answer_default","defineComponent","getTemplate","props","emit","computed","value","Question_default","defineComponent","getTemplate","Answer_default","props","question","toRefs","computed","computed","defineComponent","toRefs","QuestionArrowLeft","defineComponent","getTemplate","QuestionArrowRight","QuestionArrow_default","props","emit","disabled","toRefs","computed","QuestionRoot_default","defineComponent","getTemplate","currentQuestion","incrementCurrentQuestionIndex","decrementCurrentQuestionIndex","setCurrentQuestionAnswer","isFirstQuestion","isLastQuestion","useQuestions","onArrowLeft","onArrowRight","currentQuestionKey","computed","Question_default","QuestionArrow_default","style","computed","defineComponent","defineComponent","computed","getEvaluationData","text","evaluationTexts","MULTI_SELECT_FACTOR","calculateScoreOfSelectedAnswers","answers","checkedAnswers","answer","factor","score","calculateScoreOfMaxAnswers","positiveAnswers","calculateScoreOfMinAnswers","negativeAnswers","useEvaluation","allQuestions","useQuestions","computed","currentScore","question","questionScore","maxScore","minScore","evaluationText","evaluationTextIndex","isFinished","EvaluationPoint_default","defineComponent","getTemplate","evaluationText","useEvaluation","EvaluationRoot_default","defineComponent","getTemplate","EvaluationPoint_default","score","useEvaluation","computed","defineComponent","defineComponent","DownloadButton_default","defineComponent","getTemplate","import_papaparse","useDownload","allQuestions","useQuestions","score","useEvaluation","getDownloadData","answersHeader","answerRows","question","value","answer","scoreRow","emptyRow","download","data","filename","type","file","a","url","csv","DownloadRoot_default","defineComponent","getTemplate","DownloadButton_default","downloadResults","useDownload","defineComponent","FinishRoot_default","defineComponent","getTemplate","createApp","getTemplate","TrackRoot_default","QuestionRoot_default","EvaluationRoot_default","DownloadRoot_default","FinishRoot_default","isFinished","useEvaluation"]}